{"ast":null,"code":"var _jsxFileName = \"/home/diego-freire/Documentos/projetos_diego/Planning-Poker/planning-poker-front/src/components/PokerRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PokerRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [canReveal, setCanReveal] = useState(false);\n  const [votes, setVotes] = useState([]);\n  const [average, setAverage] = useState(null);\n  const cards = Array.from({\n    length: 31\n  }, (_, i) => i * 2); // Números pares de 0 a 60\n\n  useEffect(() => {\n    socket.on('updateUsers', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    socket.on('allVoted', () => {\n      setCanReveal(true);\n    });\n    socket.on('votesRevealed', ({\n      votes,\n      average\n    }) => {\n      setVotes(votes);\n      setAverage(average);\n    });\n    return () => {\n      socket.off('updateUsers');\n      socket.off('allVoted');\n      socket.off('votesRevealed');\n    };\n  }, []);\n  const handleVote = value => {\n    setSelectedCard(value);\n    socket.emit('vote', {\n      roomId,\n      vote: value\n    });\n  };\n  const handleRevealVotes = () => {\n    socket.emit('revealVotes', roomId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Sala: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Participantes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), votes.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Escolha sua carta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: cards.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${selectedCard === value ? 'selected' : ''}`,\n          onClick: () => handleVote(value),\n          children: value\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), canReveal && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        style: {\n          marginTop: '20px'\n        },\n        onClick: handleRevealVotes,\n        children: \"Revelar Votos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resultados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: votes.map((vote, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [vote.user, \": \", vote.vote]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"M\\xE9dia: \", average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(PokerRoom, \"HLJck69xRcO8uXx63rWsd/rEma8=\", false, function () {\n  return [useParams];\n});\n_c = PokerRoom;\nexport default PokerRoom;\nvar _c;\n$RefreshReg$(_c, \"PokerRoom\");","map":{"version":3,"names":["useEffect","useState","useParams","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PokerRoom","_s","roomId","users","setUsers","selectedCard","setSelectedCard","canReveal","setCanReveal","votes","setVotes","average","setAverage","cards","Array","from","length","_","i","on","off","handleVote","value","emit","vote","handleRevealVotes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","idx","className","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["/home/diego-freire/Documentos/projetos_diego/Planning-Poker/planning-poker-front/src/components/PokerRoom.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport socket from '../socket';\n\nfunction PokerRoom() {\n    const { roomId } = useParams();\n    const [users, setUsers] = useState([]);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [canReveal, setCanReveal] = useState(false);\n    const [votes, setVotes] = useState([]);\n    const [average, setAverage] = useState(null);\n\n    const cards = Array.from({ length: 31 }, (_, i) => i * 2); // Números pares de 0 a 60\n\n    useEffect(() => {\n        socket.on('updateUsers', ({ users }) => {\n            setUsers(users);\n        });\n\n        socket.on('allVoted', () => {\n            setCanReveal(true);\n        });\n\n        socket.on('votesRevealed', ({ votes, average }) => {\n            setVotes(votes);\n            setAverage(average);\n        });\n\n        return () => {\n            socket.off('updateUsers');\n            socket.off('allVoted');\n            socket.off('votesRevealed');\n        };\n    }, []);\n\n    const handleVote = (value) => {\n        setSelectedCard(value);\n        socket.emit('vote', { roomId, vote: value });\n    };\n\n    const handleRevealVotes = () => {\n        socket.emit('revealVotes', roomId);\n    };\n\n    return (\n        <div>\n            <h2>Sala: {roomId}</h2>\n\n            <h3>Participantes:</h3>\n            <ul>\n                {users.map((user, idx) => (\n                    <li key={idx}>{user}</li>\n                ))}\n            </ul>\n\n            {votes.length === 0 ? (\n                <>\n                    <h3>Escolha sua carta:</h3>\n                    <div className=\"card-grid\">\n                        {cards.map((value, idx) => (\n                            <div\n                                key={idx}\n                                className={`card ${selectedCard === value ? 'selected' : ''}`}\n                                onClick={() => handleVote(value)}\n                            >\n                                {value}\n                            </div>\n                        ))}\n                    </div>\n\n                    {canReveal && (\n                        <button className=\"button\" style={{ marginTop: '20px' }} onClick={handleRevealVotes}>\n                            Revelar Votos\n                        </button>\n                    )}\n                </>\n            ) : (\n                <>\n                    <h3>Resultados:</h3>\n                    <ul>\n                        {votes.map((vote, idx) => (\n                            <li key={idx}>\n                                {vote.user}: {vote.vote}\n                            </li>\n                        ))}\n                    </ul>\n                    <h3>Média: {average}</h3>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default PokerRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}